; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\stm32f4xx_syscfg.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_syscfg.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\stm32LIB\inc -I..\stm32LIB\CMSIS\Include -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM4F -I..\user\_Dsp\Include -I..\user\_Algorithms -I..\user\_Bsp -I..\user\_Device -I..\user\_Task -I..\system -I..\stm32LIB\CMSIS -I..\system -I..\FreeRTOS -I..\user -I.\RTE\_COD_Gimbal_Task -IC:\keil_v5_project\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM4 -D__FPU_PRESENT --omf_browse=.\objects\stm32f4xx_syscfg.crf ..\stm32LIB\src\stm32f4xx_syscfg.c]
                          THUMB

                          AREA ||i.SYSCFG_CompensationCellCmd||, CODE, READONLY, ALIGN=2

                  SYSCFG_CompensationCellCmd PROC
;;;199      */
;;;200    void SYSCFG_CompensationCellCmd(FunctionalState NewState)
000000  4901              LDR      r1,|L1.8|
;;;201    {
;;;202      /* Check the parameters */
;;;203      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;204    
;;;205      *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;206    }
000004  4770              BX       lr
;;;207    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x42270400

                          AREA ||i.SYSCFG_DeInit||, CODE, READONLY, ALIGN=1

                  SYSCFG_DeInit PROC
;;;99       */
;;;100    void SYSCFG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;101    {
;;;102       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000002  2101              MOVS     r1,#1
000004  0388              LSLS     r0,r1,#14
000006  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;103       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  f44f4080          MOV      r0,#0x4000
000010  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;104    }
000014  bd10              POP      {r4,pc}
;;;105    
                          ENDP


                          AREA ||i.SYSCFG_ETH_MediaInterfaceConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_ETH_MediaInterfaceConfig PROC
;;;182      */
;;;183    void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
000000  4901              LDR      r1,|L3.8|
;;;184    { 
;;;185      assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
;;;186      /* Configure MII_RMII selection bit */ 
;;;187      *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
000002  6008              STR      r0,[r1,#0]
;;;188    }
000004  4770              BX       lr
;;;189    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x422700dc

                          AREA ||i.SYSCFG_EXTILineConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_EXTILineConfig PROC
;;;161      */
;;;162    void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
000000  b530              PUSH     {r4,r5,lr}
;;;163    {
;;;164      uint32_t tmp = 0x00;
000002  2200              MOVS     r2,#0
;;;165    
;;;166      /* Check the parameters */
;;;167      assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
;;;168      assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
;;;169    
;;;170      tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
000004  078b              LSLS     r3,r1,#30
000006  0f1c              LSRS     r4,r3,#28
000008  230f              MOVS     r3,#0xf
00000a  fa03f204          LSL      r2,r3,r4
;;;171      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
00000e  4b0b              LDR      r3,|L4.60|
000010  108c              ASRS     r4,r1,#2
000012  f8533024          LDR      r3,[r3,r4,LSL #2]
000016  4393              BICS     r3,r3,r2
000018  4c08              LDR      r4,|L4.60|
00001a  108d              ASRS     r5,r1,#2
00001c  f8443025          STR      r3,[r4,r5,LSL #2]
;;;172      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
000020  4623              MOV      r3,r4
000022  108c              ASRS     r4,r1,#2
000024  f8533024          LDR      r3,[r3,r4,LSL #2]
000028  078c              LSLS     r4,r1,#30
00002a  0f24              LSRS     r4,r4,#28
00002c  fa00f404          LSL      r4,r0,r4
000030  4323              ORRS     r3,r3,r4
000032  4c02              LDR      r4,|L4.60|
000034  108d              ASRS     r5,r1,#2
000036  f8443025          STR      r3,[r4,r5,LSL #2]
;;;173    }
00003a  bd30              POP      {r4,r5,pc}
;;;174    
                          ENDP

                  |L4.60|
                          DCD      0x40013808

                          AREA ||i.SYSCFG_GetCompensationCellStatus||, CODE, READONLY, ALIGN=2

                  SYSCFG_GetCompensationCellStatus PROC
;;;212      */
;;;213    FlagStatus SYSCFG_GetCompensationCellStatus(void)
000000  2000              MOVS     r0,#0
;;;214    {
;;;215      FlagStatus bitstatus = RESET;
;;;216        
;;;217      if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
000002  4904              LDR      r1,|L5.20|
000004  6809              LDR      r1,[r1,#0]
000006  f4017180          AND      r1,r1,#0x100
00000a  b109              CBZ      r1,|L5.16|
;;;218      {
;;;219        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;220      }
;;;221      else
;;;222      {
;;;223        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;224      }
;;;225      return bitstatus;
;;;226    }
000012  4770              BX       lr
;;;227    
                          ENDP

                  |L5.20|
                          DCD      0x40013820

                          AREA ||i.SYSCFG_MemoryRemapConfig||, CODE, READONLY, ALIGN=2

                  SYSCFG_MemoryRemapConfig PROC
;;;117      */
;;;118    void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
000000  4901              LDR      r1,|L6.8|
;;;119    {
;;;120      /* Check the parameters */
;;;121      assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
;;;122    
;;;123      SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
000002  6008              STR      r0,[r1,#0]
;;;124    }
000004  4770              BX       lr
;;;125    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40013800

                          AREA ||i.SYSCFG_MemorySwappingBank||, CODE, READONLY, ALIGN=2

                  SYSCFG_MemorySwappingBank PROC
;;;138      */
;;;139    void SYSCFG_MemorySwappingBank(FunctionalState NewState)
000000  4901              LDR      r1,|L7.8|
;;;140    {
;;;141      /* Check the parameters */
;;;142      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;143    
;;;144      *(__IO uint32_t *) UFB_MODE_BB = (uint32_t)NewState;
000002  6208              STR      r0,[r1,#0x20]
;;;145    }
000004  4770              BX       lr
;;;146    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      0x42270000

;*** Start embedded assembler ***

#line 1 "..\\stm32LIB\\src\\stm32f4xx_syscfg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REV16|
#line 388 "..\\stm32LIB\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_stm32f4xx_syscfg_c_57637610____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____REVSH|
#line 402
|__asm___18_stm32f4xx_syscfg_c_57637610____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_syscfg_c_57637610____RRX|
#line 587
|__asm___18_stm32f4xx_syscfg_c_57637610____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
