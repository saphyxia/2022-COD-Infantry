; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\bmi088.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\bmi088.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\stm32LIB\inc -I..\stm32LIB\CMSIS\Include -I..\FreeRTOS\include -I..\FreeRTOS\portable\RVDS\ARM_CM4F -I..\user\_Dsp\Include -I..\user\_Algorithms -I..\user\_Bsp -I..\user\_Device -I..\user\_Task -I..\system -I..\stm32LIB\CMSIS -I..\system -I..\FreeRTOS -I..\user -I.\RTE\_COD_Gimbal_Task -IC:\keil_v5_project\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM4 -D__FPU_PRESENT --omf_browse=.\objects\bmi088.crf ..\user\_Device\bmi088.c]
                          THUMB

                          AREA ||i.BMI088_read_write_byte||, CODE, READONLY, ALIGN=2

                  BMI088_read_write_byte PROC
;;;10     
;;;11     uint32_t BMI088_read_write_byte(uint32_t tx_data)
000000  b510              PUSH     {r4,lr}
;;;12     {
000002  4604              MOV      r4,r0
;;;13         uint32_t rx_data;
;;;14     
;;;15         DMA_Cmd(DMA2_Stream2,DISABLE);
000004  2100              MOVS     r1,#0
000006  482e              LDR      r0,|L1.192|
000008  f7fffffe          BL       DMA_Cmd
;;;16         DMA_Cmd(DMA2_Stream5,DISABLE);
00000c  2100              MOVS     r1,#0
00000e  482c              LDR      r0,|L1.192|
000010  3048              ADDS     r0,r0,#0x48
000012  f7fffffe          BL       DMA_Cmd
;;;17     
;;;18         DMA_SetCurrDataCounter(DMA2_Stream2,1);
000016  2101              MOVS     r1,#1
000018  4829              LDR      r0,|L1.192|
00001a  f7fffffe          BL       DMA_SetCurrDataCounter
;;;19         DMA_SetCurrDataCounter(DMA2_Stream5,1);
00001e  2101              MOVS     r1,#1
000020  4827              LDR      r0,|L1.192|
000022  3048              ADDS     r0,r0,#0x48
000024  f7fffffe          BL       DMA_SetCurrDataCounter
;;;20     
;;;21         DMA2_Stream2->CR|=(1<<10);    
000028  4825              LDR      r0,|L1.192|
00002a  6800              LDR      r0,[r0,#0]
00002c  f4406080          ORR      r0,r0,#0x400
000030  4923              LDR      r1,|L1.192|
000032  6008              STR      r0,[r1,#0]
;;;22         DMA2_Stream5->CR|=(1<<10);
000034  4822              LDR      r0,|L1.192|
000036  3048              ADDS     r0,r0,#0x48
000038  6800              LDR      r0,[r0,#0]
00003a  f4406080          ORR      r0,r0,#0x400
00003e  4920              LDR      r1,|L1.192|
000040  3148              ADDS     r1,r1,#0x48
000042  6008              STR      r0,[r1,#0]
;;;23     //肯定不对，RX应该是被赋值的！！！
;;;24         DMA2_Stream2->M0AR=rx_data;
000044  481e              LDR      r0,|L1.192|
000046  300c              ADDS     r0,r0,#0xc
000048  6005              STR      r5,[r0,#0]
;;;25         DMA2_Stream5->M0AR=tx_data;
00004a  481d              LDR      r0,|L1.192|
00004c  3054              ADDS     r0,r0,#0x54
00004e  6004              STR      r4,[r0,#0]
;;;26     
;;;27         SPI1->DR;
000050  481c              LDR      r0,|L1.196|
000052  8980              LDRH     r0,[r0,#0xc]
;;;28     
;;;29         while(SPI_I2S_GetFlagStatus(SPI1,SPI_I2S_FLAG_TXE)==RESET);
000054  bf00              NOP      
                  |L1.86|
000056  2102              MOVS     r1,#2
000058  481a              LDR      r0,|L1.196|
00005a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00005e  2800              CMP      r0,#0
000060  d0f9              BEQ      |L1.86|
;;;30     
;;;31         DMA_Cmd(DMA2_Stream2,ENABLE);
000062  2101              MOVS     r1,#1
000064  4816              LDR      r0,|L1.192|
000066  f7fffffe          BL       DMA_Cmd
;;;32         DMA_Cmd(DMA2_Stream5,ENABLE);
00006a  2101              MOVS     r1,#1
00006c  4814              LDR      r0,|L1.192|
00006e  3048              ADDS     r0,r0,#0x48
000070  f7fffffe          BL       DMA_Cmd
;;;33     
;;;34         while(DMA_GetFlagStatus(DMA2_Stream2,DMA_FLAG_TCIF2)==RESET);    
000074  bf00              NOP      
                  |L1.118|
000076  f04f5181          MOV      r1,#0x10200000
00007a  4811              LDR      r0,|L1.192|
00007c  f7fffffe          BL       DMA_GetFlagStatus
000080  2800              CMP      r0,#0
000082  d0f8              BEQ      |L1.118|
;;;35         while(DMA_GetFlagStatus(DMA2_Stream5,DMA_FLAG_TCIF5)==RESET);
000084  bf00              NOP      
                  |L1.134|
000086  4910              LDR      r1,|L1.200|
000088  480d              LDR      r0,|L1.192|
00008a  3048              ADDS     r0,r0,#0x48
00008c  f7fffffe          BL       DMA_GetFlagStatus
000090  2800              CMP      r0,#0
000092  d0f8              BEQ      |L1.134|
;;;36     
;;;37         DMA_Cmd(DMA2_Stream2,DISABLE);    
000094  2100              MOVS     r1,#0
000096  480a              LDR      r0,|L1.192|
000098  f7fffffe          BL       DMA_Cmd
;;;38         DMA_Cmd(DMA2_Stream5,DISABLE);
00009c  2100              MOVS     r1,#0
00009e  4808              LDR      r0,|L1.192|
0000a0  3048              ADDS     r0,r0,#0x48
0000a2  f7fffffe          BL       DMA_Cmd
;;;39     
;;;40         DMA_ClearFlag(DMA2_Stream2,DMA_FLAG_TCIF2);
0000a6  f04f5181          MOV      r1,#0x10200000
0000aa  4805              LDR      r0,|L1.192|
0000ac  f7fffffe          BL       DMA_ClearFlag
;;;41         DMA_ClearFlag(DMA2_Stream5,DMA_FLAG_TCIF5);
0000b0  4905              LDR      r1,|L1.200|
0000b2  4803              LDR      r0,|L1.192|
0000b4  3048              ADDS     r0,r0,#0x48
0000b6  f7fffffe          BL       DMA_ClearFlag
;;;42     
;;;43         return rx_data;
0000ba  4628              MOV      r0,r5
;;;44     }
0000bc  bd10              POP      {r4,pc}
;;;45     
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      0x40026440
                  |L1.196|
                          DCD      0x40013000
                  |L1.200|
                          DCD      0x20000800

                          AREA ||i.bmi088_Init||, CODE, READONLY, ALIGN=1

                  bmi088_Init PROC
;;;2      
;;;3      void bmi088_Init(void)
000000  4770              BX       lr
;;;4      {
;;;5      
;;;6      }
;;;7      
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\user\\_Device\\bmi088.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_bmi088_c_bccfd7ee____REV16|
#line 388 "..\\stm32LIB\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___8_bmi088_c_bccfd7ee____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_bmi088_c_bccfd7ee____REVSH|
#line 402
|__asm___8_bmi088_c_bccfd7ee____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___8_bmi088_c_bccfd7ee____RRX|
#line 587
|__asm___8_bmi088_c_bccfd7ee____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
